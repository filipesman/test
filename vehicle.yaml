openapi: 3.0.1
info:
  title: Vehicle Position API
  description: API for retrieving vehicle position data
  version: '2025-05-08T16:05:54Z'
servers:
  - url: https://5cq0ajv1wb.execute-api.eu-west-1.amazonaws.com/{basePath}
    variables:
      basePath:
        default: prod
paths:
  /vehicle:
    options:
      responses:
        '204':
          description: 204 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '204'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ statusCode: 200 }'
        passthroughBehavior: when_no_match
        type: mock
  /vehicle/{vehicle-id}:
    options:
      parameters:
        - name: vehicle-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '204'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ statusCode: 200 }'
        passthroughBehavior: when_no_match
        type: mock
  /vehicle/{vehicle-id}/position:
    get:
      parameters:
        - name: vehicle-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
            Content-Type:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: >-
          arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:043309354750:function:vehicle-position-vehicleposition26216388-5icCG4ruCBx6/invocations
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
              method.response.header.Content-Type: '''application/json'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        passthroughBehavior: when_no_match
        type: aws_proxy
    options:
      parameters:
        - name: vehicle-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '204'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ statusCode: 200 }'
        passthroughBehavior: when_no_match
        type: mock
  /:
    options:
      responses:
        '204':
          description: 204 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '204'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ statusCode: 200 }'
        passthroughBehavior: when_no_match
        type: mock
components:
  schemas:
    Empty:
      title: Empty Schema
      type: object
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header
